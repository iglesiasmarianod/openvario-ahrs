#
# Temporary makefile for building sensord out of treee with Yocto toolchain
# Source Yocto environment file then run with make -f Makefile-temp-cross
#

### cross-build defs ###

ifeq ($(strip $(OETMP)),)
	OETMP=${OE_BUILD_TMPDIR}-glibc
endif

OV_DEVICE = openvario-7-CH070

TOOLDIR = $(OETMP)/sysroots/`uname -m`-linux/usr/bin
STAGEDIR = ${OETMP}/sysroots/${OV_DEVICE}/usr

LIBDIR = $(STAGEDIR)/lib
INCDIR = $(STAGEDIR)/include

# specific to Yocto toolchain for Angstrom
CC = ${TOOLDIR}/arm-angstrom-linux-gnueabi/arm-angstrom-linux-gnueabi-gcc
CFLAGS = -Wall -mfloat-abi=hard -mfpu=vfp -fsingle-precision-constant -B$(LIBDIR) -L${LIBDIR}
EXECUTABLE = sensord sensorcal
_OBJ_MPU = inv_mpu.o inv_mpu_dmp_motion_driver.o linux_glue.o mpu9150.o quaternion.o vector3d.o
_OBJ = ms5611.o ams5915.o ads1110.o main.o nmea.o timer.o KalmanFilter1d.o cmdline_parser.o configfile_parser.o vario.o AirDensity.o 24c16.o $(_OBJ_MPU) 
_OBJ_CAL = 24c16.o ams5915.o inv_mpu.o inv_mpu_dmp_motion_driver.o linux_glue.o mpu9150.o quaternion.o vector3d.o sensorcal.o $(_OBJ_MPU) 
OBJ = $(patsubst %,$(ODIR)/%,$(_OBJ))
OBJ_CAL = $(patsubst %,$(ODIR)/%,$(_OBJ_CAL))
MPUDIR = mpu9150
EMPLDIR = ${MPUDIR}/eMPL
GLUEDIR = ${MPUDIR}/glue
LIBS = -lrt -lm -DEMPL_TARGET_LINUX -DMPU9150 -DAK8975_SECONDARY -I $(EMPLDIR) -I $(GLUEDIR) -I $(MPUDIR) 
ODIR = obj
BINDIR = /opt/bin/
GIT_VERSION := $(shell git describe --dirty)
VPATH += %.c $(MPUDIR):$(EMPLDIR):$(GLUEDIR)

#targets

$(ODIR)/%.o: %.c
	mkdir -p $(ODIR)
	$(CC) -DVERSION_GIT=\"$(GIT_VERSION)\" $(LIBS) -c -o $@ $< $(CFLAGS)
		
all: sensord sensorcal

version.h: 
	@echo Git version $(GIT_VERSION)
	
doc: 
	@echo Running doxygen to create documentation
	doxygen
	
sensord: $(OBJ)
	$(CC) $(LIBS) -g -o $@ $^
	
sensorcal: $(OBJ_CAL)
	$(CC) $(LIBS) -g -o $@ $^

install: sensord sensorcal
	install -D sensord $(BINDIR)/$(EXECUTABLE)
	
test: test.o obj/nmea.o
	$(CC) $(LIBS) -g -o $@ $^

sensord_fastsample: sensord_fastsample.o
	$(CC) $(LIBS) -g -o $@ $^

i2c_test: i2c_test.o ms5611.o
	$(CC) $(LIBS) -g -o $@ $^
	
clean:
	rm -f $(ODIR)/*.o *~ core $(EXECUTABLE)
	rm -fr doc

.PHONY: clean all doc
